{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/deyesarr/notive profile/react-native-user-profile/react-native-user-profile/App.js\";\nimport * as React from 'react';\nimport { Icon } from 'react-native-elements';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport PropTypes from 'prop-types';\nimport Setting1 from \"./screens/Setting1\";\nimport SettingOption1 from \"./screens/Setting1/Options\";\nvar Setting1Stack = createStackNavigator();\n\nfunction SettingsStackScreen() {\n  return React.createElement(Setting1Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Setting1Stack.Screen, {\n    name: \"Settings\",\n    component: Setting1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), React.createElement(Setting1Stack.Screen, {\n    name: \"Options\",\n    component: SettingOption1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Tab = createBottomTabNavigator();\n\nvar HomeIcon = function HomeIcon(_ref) {\n  var focused = _ref.focused,\n      tintColor = _ref.tintColor;\n  return React.createElement(Icon, {\n    name: \"lens\",\n    type: \"material\",\n    size: 26,\n    color: focused ? '#adacac' : '#ededed',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(props) {\n          return React.createElement(HomeIcon, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 32\n            }\n          }));\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray',\n      showLabel: false,\n      showIcon: true,\n      indicatorStyle: {\n        backgroundColor: 'transparent'\n      },\n      labelStyle: {\n        fontSize: 12\n      },\n      iconStyle: {\n        width: 30,\n        height: 30\n      },\n      style: {\n        justifyContent: 'center'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsStackScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/deyesarr/notive profile/react-native-user-profile/react-native-user-profile/App.js"],"names":["React","Icon","NavigationContainer","createStackNavigator","createBottomTabNavigator","PropTypes","Setting1","SettingOption1","Setting1Stack","SettingsStackScreen","Tab","HomeIcon","focused","tintColor","App","route","tabBarIcon","props","activeTintColor","inactiveTintColor","showLabel","showIcon","indicatorStyle","backgroundColor","labelStyle","fontSize","iconStyle","width","height","style","justifyContent"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAOC,QAAP;AAGA,OAAOC,cAAP;AAEA,IAAMC,aAAa,GAAGL,oBAAoB,EAA1C;;AACA,SAASM,mBAAT,GAA+B;AAC7B,SACE,oBAAC,aAAD,CAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD,CAAe,MAAf;AAAsB,IAAA,IAAI,EAAC,UAA3B;AAAsC,IAAA,SAAS,EAAEH,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,aAAD,CAAe,MAAf;AAAsB,IAAA,IAAI,EAAC,SAA3B;AAAqC,IAAA,SAAS,EAAEC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,IAAMG,GAAG,GAAGN,wBAAwB,EAApC;;AAEA,IAAMO,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,SAAZ,QAAYA,SAAZ;AAAA,SACf,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe,SAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe;AAAA,CAAjB;;AASA,eAAe,SAASE,GAAT,GAAe;AAC5B,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,oBAAAC,KAAK;AAAA,iBAAI,oBAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ;AAAA;AADY,OAAhB;AAAA,KADjB;AAIE,IAAA,aAAa,EAAE;AACbC,MAAAA,eAAe,EAAE,QADJ;AAEbC,MAAAA,iBAAiB,EAAE,MAFN;AAGbC,MAAAA,SAAS,EAAE,KAHE;AAIbC,MAAAA,QAAQ,EAAE,IAJG;AAKbC,MAAAA,cAAc,EAAE;AACdC,QAAAA,eAAe,EAAE;AADH,OALH;AAQbC,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE;AADA,OARC;AAWbC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,EADE;AAETC,QAAAA,MAAM,EAAE;AAFC,OAXE;AAebC,MAAAA,KAAK,EAAE;AAELC,QAAAA,cAAc,EAAE;AAFX;AAfM,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAErB,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF,CADF;AA+BD","sourcesContent":["import * as React from 'react'\nimport { Icon } from 'react-native-elements'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport PropTypes from 'prop-types'\n\n\nimport Setting1 from './screens/Setting1'\n\n\nimport SettingOption1 from './screens/Setting1/Options'\n\nconst Setting1Stack = createStackNavigator()\nfunction SettingsStackScreen() {\n  return (\n    <Setting1Stack.Navigator>\n      <Setting1Stack.Screen name=\"Settings\" component={Setting1} />\n      <Setting1Stack.Screen name=\"Options\" component={SettingOption1} />\n    </Setting1Stack.Navigator>\n  )\n}\n\nconst Tab = createBottomTabNavigator()\n\nconst HomeIcon = ({ focused, tintColor }) => (\n  <Icon\n    name=\"lens\"\n    type=\"material\"\n    size={26}\n    color={focused ? '#adacac' : '#ededed'}\n  />\n)\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator \n        screenOptions={({ route }) => ({\n          tabBarIcon: props => <HomeIcon {...props}/>\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n          showLabel: false,\n          showIcon: true,\n          indicatorStyle: {\n            backgroundColor: 'transparent',\n          },\n          labelStyle: {\n            fontSize: 12,\n          },\n          iconStyle: {\n            width: 30,\n            height: 30,\n          },\n          style: {\n            // backgroundColor: 'transparent',\n            justifyContent: 'center',\n          },\n        }}\n      >\n        <Tab.Screen name=\"Settings\" component={SettingsStackScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}