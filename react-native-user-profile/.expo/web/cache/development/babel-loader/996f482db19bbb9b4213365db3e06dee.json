{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/deyesarr/notive profile/react-native-user-profile/react-native-user-profile/screens/Setting1/Setting.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, ListItem } from 'react-native-elements';\nimport PropTypes from 'prop-types';\nimport BaseIcon from \"./Icon\";\nimport Chevron from \"./Chevron\";\nimport InfoText from \"./InfoText\";\nvar styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: 'white'\n  },\n  userRow: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingBottom: 8,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6\n  },\n  userImage: {\n    marginRight: 12\n  },\n  listItemContainer: {\n    height: 55,\n    borderWidth: 0.5,\n    borderColor: '#ECECEC'\n  }\n});\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pushNotifications: true\n    };\n\n    _this.onPressSetting = function () {\n      _this.props.navigation.navigate('Options');\n    };\n\n    _this.onChangePushNotifications = function () {\n      _this.setState(function (state) {\n        return {\n          pushNotifications: !state.pushNotifications\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          avatar = _this$props.avatar,\n          name = _this$props.name,\n          _this$props$emails = _slicedToArray(_this$props.emails, 1),\n          firstEmail = _this$props$emails[0];\n\n      return React.createElement(ScrollView, {\n        style: styles.scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.userRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.userImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Avatar, {\n        rounded: true,\n        size: \"large\",\n        source: {\n          uri: avatar\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, name), React.createElement(Text, {\n        style: {\n          color: 'gray',\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, firstEmail.email))), React.createElement(InfoText, {\n        text: \"Account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(ListItem, {\n        hideChevron: true,\n        title: \"App Volume\",\n        containerStyle: styles.listItemContainer,\n        rightElement: React.createElement(Switch, {\n          onValueChange: this.onChangePushNotifications,\n          value: this.state.pushNotifications,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        }),\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#FFADF2'\n          },\n          icon: {\n            type: 'material',\n            name: 'notifications'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Currency\",\n        rightTitle: \"USD\",\n        rightTitleStyle: {\n          fontSize: 15\n        },\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#FAD291'\n          },\n          icon: {\n            type: 'font-awesome',\n            name: 'money'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Location\",\n        rightTitle: \"New York\",\n        rightTitleStyle: {\n          fontSize: 15\n        },\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#57DCE7'\n          },\n          icon: {\n            type: 'material',\n            name: 'place'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Language\",\n        rightTitle: \"English\",\n        rightTitleStyle: {\n          fontSize: 15\n        },\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#FEA8A1'\n          },\n          icon: {\n            type: 'material',\n            name: 'language'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      })), React.createElement(InfoText, {\n        text: \"More\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, React.createElement(ListItem, {\n        title: \"About US\",\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#A4C8F0'\n          },\n          icon: {\n            type: 'ionicon',\n            name: 'md-information-circle'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Terms and Policies\",\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#C6C7C6'\n          },\n          icon: {\n            type: 'entypo',\n            name: 'light-bulb'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Share our App\",\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#C47EFF'\n          },\n          icon: {\n            type: 'entypo',\n            name: 'share'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Rate Us\",\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#FECE44'\n          },\n          icon: {\n            type: 'entypo',\n            name: 'star'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }), React.createElement(ListItem, {\n        title: \"Send FeedBack\",\n        onPress: function onPress() {\n          return _this2.onPressSetting();\n        },\n        containerStyle: styles.listItemContainer,\n        badge: {\n          value: 999,\n          textStyle: {\n            fontSize: 14,\n            color: 'white'\n          }\n        },\n        leftIcon: React.createElement(BaseIcon, {\n          containerStyle: {\n            backgroundColor: '#00C001'\n          },\n          icon: {\n            type: 'materialicon',\n            name: 'feedback'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }\n        }),\n        rightIcon: React.createElement(Chevron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 24\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\nSettingsScreen.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  navigation: PropTypes.object.isRequired,\n  emails: PropTypes.arrayOf(PropTypes.shape({\n    email: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default SettingsScreen;","map":{"version":3,"sources":["/Users/deyesarr/notive profile/react-native-user-profile/react-native-user-profile/screens/Setting1/Setting.js"],"names":["React","Component","Avatar","ListItem","PropTypes","BaseIcon","Chevron","InfoText","styles","StyleSheet","create","scroll","backgroundColor","userRow","alignItems","flexDirection","paddingBottom","paddingLeft","paddingRight","paddingTop","userImage","marginRight","listItemContainer","height","borderWidth","borderColor","SettingsScreen","state","pushNotifications","onPressSetting","props","navigation","navigate","onChangePushNotifications","setState","avatar","name","emails","firstEmail","uri","fontSize","color","email","type","value","textStyle","propTypes","string","isRequired","object","arrayOf","shape"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { ScrollView, Switch, StyleSheet, Text, View } from 'react-native'\nimport { Avatar, ListItem } from 'react-native-elements'\nimport PropTypes from 'prop-types'\n\nimport BaseIcon from './Icon'\nimport Chevron from './Chevron'\nimport InfoText from './InfoText'\n\nconst styles = StyleSheet.create({\n  scroll: {\n    backgroundColor: 'white',\n  },\n  userRow: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingBottom: 8,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 6,\n  },\n  userImage: {\n    marginRight: 12,\n  },\n  listItemContainer: {\n    height: 55,\n    borderWidth: 0.5,\n    borderColor: '#ECECEC',\n  },\n})\n\nclass SettingsScreen extends Component {\n  static propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    navigation: PropTypes.object.isRequired,\n    emails: PropTypes.arrayOf(\n      PropTypes.shape({\n        email: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }\n\n  state = {\n    pushNotifications: true,\n  }\n\n  onPressSetting = () => {\n    this.props.navigation.navigate('Options')\n  }\n\n  onChangePushNotifications = () => {\n    this.setState(state => ({\n      pushNotifications: !state.pushNotifications,\n    }))\n  }\n\n  render() {\n    const { avatar, name, emails: [firstEmail] } = this.props\n    return (\n      <ScrollView style={styles.scroll}>\n        <View style={styles.userRow}>\n          <View style={styles.userImage}>\n            <Avatar\n              rounded\n              size=\"large\"\n              source={{uri: avatar}}\n            />\n          </View>\n          <View>\n            <Text style={{ fontSize: 16 }}>{name}</Text>\n            <Text\n              style={{\n                color: 'gray',\n                fontSize: 16,\n              }}\n            >\n              {firstEmail.email}\n            </Text>\n          </View>\n        </View>\n        <InfoText text=\"Account\" />\n        <View>\n          <ListItem\n            hideChevron\n            title=\"App Volume\"\n            containerStyle={styles.listItemContainer}\n            rightElement={\n              <Switch\n                onValueChange={this.onChangePushNotifications}\n                value={this.state.pushNotifications}\n              />\n            }\n            leftIcon={\n              <BaseIcon\n                containerStyle={{\n                  backgroundColor: '#FFADF2',\n                }}\n                icon={{\n                  type: 'material',\n                  name: 'notifications',\n                }}\n              />\n            }\n          />\n          <ListItem\n            // chevron\n            title=\"Currency\"\n            rightTitle=\"USD\"\n            rightTitleStyle={{ fontSize: 15 }}\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{ backgroundColor: '#FAD291' }}\n                icon={{\n                  type: 'font-awesome',\n                  name: 'money',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n          <ListItem\n            title=\"Location\"\n            rightTitle=\"New York\"\n            rightTitleStyle={{ fontSize: 15 }}\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{ backgroundColor: '#57DCE7' }}\n                icon={{\n                  type: 'material',\n                  name: 'place',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n          <ListItem\n            title=\"Language\"\n            rightTitle=\"English\"\n            rightTitleStyle={{ fontSize: 15 }}\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{ backgroundColor: '#FEA8A1' }}\n                icon={{\n                  type: 'material',\n                  name: 'language',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n        </View>\n        <InfoText text=\"More\" />\n        <View>\n          <ListItem\n            title=\"About US\"\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{ backgroundColor: '#A4C8F0' }}\n                icon={{\n                  type: 'ionicon',\n                  name: 'md-information-circle',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n          <ListItem\n            title=\"Terms and Policies\"\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{ backgroundColor: '#C6C7C6' }}\n                icon={{\n                  type: 'entypo',\n                  name: 'light-bulb',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n          <ListItem\n            title=\"Share our App\"\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{\n                  backgroundColor: '#C47EFF',\n                }}\n                icon={{\n                  type: 'entypo',\n                  name: 'share',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n          <ListItem\n            title=\"Rate Us\"\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{\n                  backgroundColor: '#FECE44',\n                }}\n                icon={{\n                  type: 'entypo',\n                  name: 'star',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n          <ListItem\n            title=\"Send FeedBack\"\n            onPress={() => this.onPressSetting()}\n            containerStyle={styles.listItemContainer}\n            badge={{\n              value: 999,\n              textStyle: { fontSize: 14, color: 'white' },\n            }}\n            leftIcon={\n              <BaseIcon\n                containerStyle={{\n                  backgroundColor: '#00C001',\n                }}\n                icon={{\n                  type: 'materialicon',\n                  name: 'feedback',\n                }}\n              />\n            }\n            rightIcon={<Chevron />}\n          />\n        </View>\n      </ScrollView>\n    )\n  }\n}\n\nexport default SettingsScreen\n"]},"metadata":{},"sourceType":"module"}